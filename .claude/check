#!/bin/bash

# placeli development check script
# Run this before committing or when finishing a task

set -e  # Exit on error

# Color codes
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "Running development checks..."
echo ""

# Format code
printf "Formatting code... "
if go fmt ./... 2>&1 | grep -q .; then
    printf "${GREEN}✓${NC} formatted\n"
else
    printf "${GREEN}✓${NC}\n"
fi

# Run go vet
printf "Running go vet... "
go vet ./... 2>/dev/null
printf "${GREEN}✓${NC}\n"

# Run tests
printf "Running tests... "
output=$(go test ./... 2>&1)
if echo "$output" | grep -q "FAIL"; then
    printf "${RED}✗${NC}\n"
    echo "$output"
    exit 1
else
    printf "${GREEN}✓${NC}\n"
fi

# Clean up dependencies
printf "Tidying modules... "
go mod tidy 2>/dev/null
printf "${GREEN}✓${NC}\n"

# Run golangci-lint
printf "Running linter... "
golangci-lint run >/dev/null 2>&1
printf "${GREEN}✓${NC}\n"

# Check markdown
printf "Running markdown linter... "
markdownlint 2>&1 *.md
printf "${GREEN}✓${NC}\n"
#
# Check for uncommitted changes (fail if any)
if [ -n "$(git diff --name-only)" ]; then
    echo ""
    printf "${RED}✗${NC} Uncommitted changes detected:\n"
    git diff --name-only | sed 's/^/  /'
    echo ""
    echo "Please double check that you included all relevant files in the commit."
fi

# Check staged files
if ! git diff --cached --quiet 2>/dev/null; then
    echo ""
    echo "Staged files:"
    git diff --cached --name-only | sed 's/^/  /'
    
    # Check for whitespace issues
    if ! git diff --cached --check >/dev/null 2>&1; then
        echo ""
        printf "${RED}✗${NC} Whitespace issues:\n"
        git diff --cached --check 2>&1 | sed 's/^/  /'
        exit 1
    fi
fi

echo ""
printf "${GREEN}✓${NC} All checks passed\n"
